[tool.poetry]
name = "python-ddd"
version = "0.1.0"
description = ""
authors = ["Przemysław Górecki <przemyslaw.gorecki@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10.0"
pytest = "^6.2.4"
pydantic = "^1.8.2"
black = "^21.5b1"
fastapi = "^0.95.2"
uvicorn = "^0.14.0"
starlette-context = "^0.3.3"
SQLAlchemy = "^1.4.22"
dependency-injector = "^4.35.2"
colorlog = "^5.0.1"
python-json-logger = "^2.0.2"
alembic = "^1.7.3"
sqlalchemy-json = "^0.4.0"
typed-ast = "^1.4.3"
python-multipart = "^0.0.5"
psycopg2-binary = "^2.9.2"
freezegun = "^1.1.0"
SQLAlchemy-Utils = "^0.38.3"
pre-commit = "^2.20.0"
click = "8.0.4"
httpx = "^0.23.1"
requests = "^2.31.0"
bcrypt = "^4.0.1"

[tool.poetry.dev-dependencies]
poethepoet = "^0.10.0"
pytest-cov = "^2.12.1"
mypy = "^0.910"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poe.tasks]
test = { shell = "DATABASE_URL=postgresql://postgres:password@localhost:5433/postgres pytest src" }
test_domain = "pytest -k domain"
test_infrastructure = "pytest -k infrastructure"
test_application = "pytest -k application"
test_unit = "pytest -m unit"
test_integration = "pytest -m 'not unit'"
test_coverage = "pytest --cov=src --cov-report=html"
start = { shell = "uvicorn src.api.main:app --reload" }
start_cli = { shell = "cd src && python -m cli" }
compose_up = "docker-compose -f docker-compose.dev.yml up"

[tool.black]
exclude = 'tmp'
